0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\node.exe',
1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish' ]
2 info using npm@3.9.5
3 info using node@v6.2.2
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: 'E:\\aweber',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory C:\Users\Devesh\AppData\Roaming\npm-cache\node-aweber\1.0.4\package.tgz not in flight; packing
9 verbose correctMkdir C:\Users\Devesh\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
10 info lifecycle node-aweber@1.0.4~prepublish: node-aweber@1.0.4
11 silly lifecycle node-aweber@1.0.4~prepublish: no script for prepublish, continuing
12 verbose tar pack [ 'C:\\Users\\Devesh\\AppData\\Roaming\\npm-cache\\node-aweber\\1.0.4\\package.tgz',
12 verbose tar pack   'E:\\aweber' ]
13 verbose tarball C:\Users\Devesh\AppData\Roaming\npm-cache\node-aweber\1.0.4\package.tgz
14 verbose folder E:\aweber
15 verbose addLocalTarball adding from inside cache C:\Users\Devesh\AppData\Roaming\npm-cache\node-aweber\1.0.4\package.tgz
16 verbose correctMkdir C:\Users\Devesh\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
17 silly cache afterAdd node-aweber@1.0.4
18 verbose afterAdd C:\Users\Devesh\AppData\Roaming\npm-cache\node-aweber\1.0.4\package\package.json not in flight; writing
19 verbose correctMkdir C:\Users\Devesh\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
20 verbose afterAdd C:\Users\Devesh\AppData\Roaming\npm-cache\node-aweber\1.0.4\package\package.json written
21 silly publish { name: 'node-aweber',
21 silly publish   version: '1.0.4',
21 silly publish   description: 'A nodejs module to connect to aweber API',
21 silly publish   main: 'lib/aweber.js',
21 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+https://github.com/venturepact/aweber.git' },
21 silly publish   keywords: [ 'aweber', 'nodejs' ],
21 silly publish   author: { name: 'Vikash Dahiya' },
21 silly publish   license: 'ISC',
21 silly publish   bugs: { url: 'https://github.com/venturepact/aweber/issues' },
21 silly publish   homepage: 'https://github.com/venturepact/aweber#readme',
21 silly publish   dependencies: { request: '^2.81.0' },
21 silly publish   readme: '# aweber\r\n\r\nAweber API Connection Library for Node.js Applications\r\n\r\n\r\n## Abstract\r\n\r\naweber, which is designed to be a wrapper of aweber REST API in Node.js, enables aweber application development in event-driven style.\r\nIt capsulates the access to REST API end point in asynchronous JavaScript promise call.\r\n\r\n## Install\r\n\r\nIf you are using aweber as an API library in your Node.js project :\r\n\r\n<pre>\r\n  $ npm install node-aweber\r\n</pre>\r\n\r\nIf you want to get the latest from GitHub :\r\n\r\n<pre>\r\n  $ git clone git://github.com/venturepact/aweber.git \r\n  $ cd node-aweber\r\n  $ npm link\r\n</pre>\r\n\r\n## API Usage\r\n\r\n### Authorization\r\n\r\n#### Authorization Url\r\n\r\nThe first part is to get authorization url and oauth_token_secret\r\n\r\n```javascript\r\nvar aweber =  require(\'node-aweber\');\r\n\r\nvar configuration = {\r\n    appId : \'<your aweber app id>\',\r\n    consumer_key : \'<your aweber consumer_key>\',\r\n    consumer_secret : \'<your aweber consumer_secret>\',\r\n    oauth_callback : \'<your aweber oauth_callback>\',\r\n}\r\naweber.configure(configuration);\r\n\r\naweber.oauth.authorizeUrl().then((result)=>{\r\n     console.log(result);\r\n},(error) => { \r\n    console.log(error);\r\n});\r\n```\r\n\r\n#### Access_token\r\n\r\n```javascript\r\naweber.oauth.accessToken({\r\n        oauth_token : \'<oauth_token that you get after visiting authorize url>\',\r\n        oauth_verifier : \'<oauth_verifier that you get after visiting authorize url>\',\r\n        oauth_token_secret : \'<oauth_token_secret that you get from authorizeUrl() function>\'\r\n    }).then((result)=>{\r\n    console.log(result);\r\n    }).catch((error)=> {\r\n        console.log(error);\r\n    })\r\n```\r\nThe ouptut of this function will be newly generated oauth_token and oauth_token_secret which will be used in configuration to call all aweber rest endpoints. The final configuration object will be like this\r\n\r\n``` javascript\r\nvar configuration = {\r\n    appId : \'<your aweber app id>\',\r\n    consumer_key : \'<your aweber consumer_key>\',\r\n    consumer_secret : \'<your aweber consumer_secret>\',\r\n    oauth_token : \'<newly generated oauth_token from oauth.accessToken() function >\',\r\n    oauth_token_secret : \'< newly generated in oauth_token_secret from oauth.accessToken() function >\'\r\n}\r\naweber.configure(configuration);\r\n```\r\n\r\n\r\n# Collections Endpoints\r\n\r\n## Accounts\r\n\r\n#### show : returns all account resources\r\n\r\n``` javascript\r\n\r\naweber.account.show()\r\n    .then((result)=>{\r\n        console.log(result);\r\n    }).catch((error)=> {\r\n        console.log(error);\r\n    })\r\n\r\n```\r\n\r\n#### showById : returns integrations_collection_link and lists_collection_link associated to account Id\r\n\r\n``` javascript\r\n\r\naweber.account.showById({\r\n    accountId : \'<accountId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### findSubscribers : returns a Collection of all Subscribers on any List in the Account that matches the search parameters\r\n\r\n``` javascript\r\n\r\naweber.account.findSubscribers({\r\n    accountId : \'<accountId>\'\r\n},{\r\n    ad_tracking : \'<ad_tracking>\',\r\n    area_code : \'<area_code>\',\r\n    city : \'<city>\',\r\n    country : \'<country>\',\r\n    custom_fields : \'<custom_fields>\', // json object of CustomField ,\r\n    name : \'<name>\',\r\n    email : \'<email>\'\r\n    // ... for more fields refer https://labs.aweber.com/docs/reference/1.0#account_entry\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### getWebForms : returns a list of all active WebForms for all Lists on this Account.\r\n\r\n``` javascript\r\n\r\naweber.account.getWebForms({\r\n    accountId : \'<accountId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### getWebFormSplitTests : returns a list of all active WebForm Split Tests for all Lists on this Account\r\n\r\n``` javascript\r\n\r\naweber.account.getWebFormSplitTests({\r\n    accountId : \'<accountId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n## Broadcasts \r\n\r\n#### show : returns list of broadcast messages\r\n\r\n``` javascript\r\n\r\naweber.broadcast.show({\r\n        accountId : \'< accountId >\',\r\n        listId : \'< listId >\'\r\n    })\r\n    .then((result)=>{\r\n        console.log(result);\r\n    }).catch((error)=> {\r\n        console.log(error);\r\n    })\r\n\r\n```\r\n\r\n#### create : create a broadcast message\r\n\r\nYou can create broadcast message by adding all the neccessary properties in second arguments\r\n\r\n``` javascript \r\n\r\naweber.broadcast.create({ \r\n    accountId : \'< accountId >\', listId : \'< listId >\'},{\r\n    body_html : \'<body_html>\',\r\n    body_text : \'<body_text>\',\r\n    click_tracking_enabled : \'<click_tracking_enabled>\',\r\n    exclude_lists : \'< List Of List Uris >\',\r\n    ....\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n``` \r\n\r\n#### showById : returns Broadcast message details by it\'s id\r\n\r\n``` javascript \r\naweber.broadcast.showById({\r\n        accountId : \'< accountId >\',\r\n        listId : \'< listId >\',\r\n        broadcastId : \'<broadcastId>\'\r\n    })\r\n    .then((result)=>{\r\n        console.log(result);\r\n    }).catch((error)=> {\r\n        console.log(error);\r\n    })\r\n\r\n```\r\n\r\n#### delete : delete a broadcast message\r\n\r\n``` javascript \r\naweber.broadcast.delete({\r\n        accountId : \'< accountId >\',\r\n        listId : \'< listId >\',\r\n        broadcastId : \'<broadcastId>\'\r\n    })\r\n    .then((result)=>{\r\n        console.log(result);\r\n    }).catch((error)=> {\r\n        console.log(error);\r\n    })\r\n\r\n```\r\n\r\n#### update : Update Broadcast message \r\n\r\n``` javascript \r\naweber.broadcast.delete({\r\n        accountId : \'< accountId >\',\r\n        listId : \'< listId >\',\r\n        broadcastId : \'<broadcastId>\'\r\n    },{\r\n        body_html : \'<body_html>\',\r\n        body_text : \'<body_text>\',\r\n        subject : \'<subject>\',\r\n        notify_on_send : \'<notify_on_send>\',\r\n        facebook_integration : \'<facebook_integration>\'\r\n        // for more parameters refer https://labs.aweber.com/docs/reference/1.0#broadcast_entry\r\n    })\r\n    .then((result)=>{\r\n        console.log(result);\r\n    }).catch((error)=> {\r\n        console.log(error);\r\n    })\r\n\r\n```\r\n\r\n## Broadcast Campaign\r\n\r\n#### showById : Represents a Broadcast Campaign\r\n\r\n``` javascript \r\naweber.broadcastCampaign.showById({\r\n        accountId : \'< accountId >\',\r\n        listId : \'< listId >\',\r\n        broadcastId : \'<broadcastId>\'\r\n    })\r\n    .then((result)=>{\r\n        console.log(result);\r\n    }).catch((error)=> {\r\n        console.log(error);\r\n    })\r\n\r\n```\r\n\r\n## Broadcast Scheduler\r\n\r\n#### schedule : allows the scheduling of broadcast messages\r\n\r\n``` javascript \r\naweber.broadcastScheduler.schedule({\r\n        accountId : \'< accountId >\',\r\n        listId : \'< listId >\',\r\n        broadcastId : \'<broadcastId>\'\r\n    },{\r\n        scheduled_for : \'<scheduled_for>\' // DateTime ISO 8601 format (Scheduled time for sending broadcast message.)\r\n    })\r\n    .then((result)=>{\r\n        console.log(result);\r\n    }).catch((error)=> {\r\n        console.log(error);\r\n    })\r\n\r\n```\r\n\r\n\r\n## Campaign\r\n\r\n#### show : returns collection of Followup or Broadcast Campaigns\r\n\r\n``` javascript\r\n\r\naweber.campaign.show({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n``` \r\n\r\n#### find : returns collection of Campaign according campaign_type\r\n\r\n``` javascript \r\n\r\naweber.campaign.find({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\'\r\n},{\r\n    campaign_type : \'<campaign_type>\' // Enum "b", "f"\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### showById : a followup or Broadcast Campaign \r\n\r\n``` javascript\r\n\r\naweber.campaign.showById({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n    broadcastId : \'<broadcastId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n``` \r\n\r\n## Cancel Broadcast \r\n\r\n#### cancel : canceling of broadcast messages\r\n\r\n``` javascript\r\n\r\naweber.cancelBroadcast.cancel({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n    broadcastId : \'<broadcastId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n``` \r\n\r\n## Click\r\n\r\n#### show : returns collection of Click events\r\n``` javascript \r\naweber.click.show({\r\n    accountId : \'<accountId >\',\r\n    listId : \'<listId>\',\r\n    campaignId : \'<campaignId>\',\r\n    linkId : \'<linkId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### showById : returns event where a Subscriber clicks a Link in a Message.\r\n``` javascript \r\naweber.click.showById({\r\n    accountId : \'<accountId >\',\r\n    listId : \'<listId>\',\r\n    campaignId : \'<campaignId>\',\r\n    linkId : \'<linkId>\',\r\n    clickId : \'<clickId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n## Component\r\n\r\n#### show : returns collection of WebFormSplitTest Components\r\n\r\n``` javascript \r\n\r\naweber.component.show({\r\n    accountId : \'<accountId >\',\r\n    listId : \'<listId>\',\r\n    campaignId : \'<campaignId>\',\r\n    linkId : \'<linkId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### showById : return a Component of a WebFormSplitTest\r\n\r\n``` javascript \r\n\r\naweber.component.showById({\r\n    accountId : \'<accountId >\',\r\n    listId : \'<listId>\',\r\n    campaignId : \'<campaignId>\',\r\n    linkId : \'<linkId>\',\r\n    componentId : \'<componentId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n## Custom Field\r\n\r\n#### show : returns collection of CustomFields for a List\r\n\r\n``` javascript\r\naweber.customField.show({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### showById : returns collection of CustomFields for a List\r\n\r\n``` javascript\r\naweber.customField.showById({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n    customFieldId : \'<customFieldId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### create : create a custom field for a list\r\n\r\n``` javascript \r\n\r\naweber.customField.create({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\'\r\n},{\r\n    name : \'<name>\'  //Name of CustomField\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### update : update custom Field\r\n\r\nWarning: Modifing/Deleting CustomFields has side effects, find out more here: https://help.aweber.com/entries/21749682-why-could-changing-my-custom-field-names-cause-problems\r\n\r\n``` javascript \r\n\r\naweber.customField.update({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n    customFieldId : \'customFieldId\'\r\n},{\r\n    name : \'<name>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### delete : delete a custom Field\r\n\r\nWarning: Modifing/Deleting CustomFields has side effects, find out more here: https://help.aweber.com/entries/21749682-why-could-changing-my-custom-field-names-cause-problems\r\n\r\n``` javascript \r\n\r\naweber.customField.delete({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n    customFieldId : \'customFieldId\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n\r\n\r\n## Doc\r\n\r\n#### show : return all docs\r\n\r\n``` javascript\r\n\r\naweber.doc.show({})\r\n.then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### showById : return doc by its Id \r\n\r\n``` javascript\r\n\r\naweber.doc.showById({\r\n    docId : \'<docId>\'\r\n})\r\n.then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n## Integration\r\n\r\n#### show : returns collection of 3rd Party Service Integrations\r\n\r\n``` javascript\r\n\r\naweber.integration.show({accountId : \'<accountId>\'})\r\n.then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### showById : return 3rd Party Service Integrations \r\n\r\n``` javascript\r\n\r\naweber.integration.showById({\r\n    accountId : \'<accountId>\',\r\n    integrationId : \'<integrationId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n## Link\r\n\r\n#### show : return collection of Links appearing in a Campaign \r\n\r\n``` javascript\r\n\r\naweber.link.show({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<linkId>\',\r\n    campaignId : \'<campaignId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### showById : return a Link appearing in a Campaign \r\n\r\n``` javascript\r\n\r\naweber.link.showById({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<linkId>\',\r\n    campaignId : \'<campaignId>\',\r\n    linkId : \'<linkId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n## List \r\n\r\n#### show : returns collection of Subscriber Lists\r\n\r\n``` javascript\r\n\r\naweber.list.show({\r\n    accountId : \'<accountId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### showById : return Subscriber List \r\n\r\n``` javascript\r\n\r\naweber.list.showById({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### find :  returns collection of Lists matching the given search parameters present in second argument\r\n\r\n``` javascript\r\n\r\naweber.list.find({\r\n    accountId : \'<accountId>\'\r\n},{\r\n    name : \'<name of list>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n## Message\r\n\r\n#### show : returns collection of sent message events\r\n\r\n``` javascript\r\n\r\naweber.message.show({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n    campaignId : \'<campaignId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### showById : returns a sent message event\r\n   \r\n``` javascript\r\n\r\naweber.message.showById({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n    campaignId : \'<campaignId>\',\r\n    messageId : \'<messageId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### getSubscribers : returns a collection of Subscribers that were sent this Campaign\r\n\r\n``` javascript\r\n\r\naweber.message.getSubscribers({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n    campaignId : \'<campaignId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n\r\n## Open\r\n\r\n#### show : returns collection of Open events\r\n\r\n``` javascript\r\n\r\naweber.open.show({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n    campaignId : \'<campaignId>\',\r\n    messageId : \'<messageId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### show : returns an Open event\r\n\r\n``` javascript\r\n\r\naweber.open.showById({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n    campaignId : \'<campaignId>\',\r\n    messageId : \'<messageId>\',\r\n    openId : \'<openId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n## Stat\r\n\r\n#### show : returns collection of Broadcast Campaign Stats\r\n\r\n``` javascript\r\n\r\naweber.stat.show({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n    campaignId : \'<campaignId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### showById : return a Broadcast Campaign Stat\r\n\r\n``` javascript\r\n\r\naweber.stat.showById({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n    campaignId : \'<campaignId>\',\r\n    statId : \'<statId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n## Subscriber\r\n\r\n#### show : return collection of subscribers\r\n\r\n``` javascript\r\n\r\naweber.subscriber.show({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### find : returns a collection of Subscribers that matches the given search parameters\r\n\r\n``` javascript\r\n\r\naweber.subscriber.find({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n},{\r\n    ad_tracking : \'<ad_tracking>\',\r\n    area_code : \'<area_code>\',\r\n    city : \'<city>\',\r\n    country : \'<country>\',\r\n    custom_fields : \'<custom_fields>\' // in json object Custom Field Data,\r\n    status : \'<status>\',\r\n    name : \'<name>\',\r\n    // ... and other Subscriber collection field please refer https://labs.aweber.com/docs/reference/1.0#subscriber_collection\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### create : add a subscriber to a list\r\n\r\n``` javascript\r\n\r\naweber.subscriber.create({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n},{\r\n    custom_fields : \'<custom_fields>\' // in json object Custom Field Data,\r\n    tags : \'<tags>\',\r\n    name : \'<name>\'\r\n    // ... and other Subscriber collection field please refer https://labs.aweber.com/docs/reference/1.0#subscriber_collection\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### showById : return subscriber\r\n\r\n``` javascript\r\n\r\naweber.subscriber.showById({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n    subscriberId : \'<subscriberId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### update : update subscriber\r\n\r\n``` javascript\r\n\r\naweber.subscriber.showById({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n    subscriberId : \'<subscriberId>\'\r\n},{\r\n    // fields that you want to update\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### getActivity : return analytics activity for this Subscriber.\r\n\r\n``` javascript\r\n\r\naweber.subscriber.getActivity({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n    subscriberId : \'<subscriberId>\'\r\n},{\r\n    // fields that you want to update\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### archive : delete a subscriber and all their data\r\n\r\n``` javascript\r\n\r\naweber.subscriber.archive({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n    subscriberId : \'<subscriberId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n## Tracked Event \r\n\r\n#### show : returns A collection of TrackedEvents\r\n\r\n``` javascript\r\n\r\naweber.trackedEvent.show({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n    campaignId : \'<campaignId>\',\r\n    messageId : \'<messageId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### show : return TrackedEvent\r\n\r\n``` javascript\r\n\r\naweber.trackedEvent.show({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n    campaignId : \'<campaignId>\',\r\n    messageId : \'<messageId>\',\r\n    trackEventId : \'<trackEventId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n## WebFormSplitTests\r\n\r\n#### show : returns collection of WebFormSplitTests\r\n\r\n``` javascript\r\n\r\naweber.webFormSplitTest.show({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### showById : return WebFormSplitTest\r\n\r\n``` javascript\r\n\r\naweber.webFormSplitTest.show({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n    webFormSplitTestId : \'<webFormSplitTestId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n## WebForm Collection\r\n\r\n#### show : returns collection of WebForms \r\n\r\n``` javascript\r\n\r\naweber.webForm.show({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n#### showById : return WebForm\r\n\r\n``` javascript\r\n\r\naweber.webForm.showById({\r\n    accountId : \'<accountId>\',\r\n    listId : \'<listId>\',\r\n    webFormId : \'<webFormId>\'\r\n}).then((result)=>{\r\n    console.log(result);\r\n}).catch((error)=> {\r\n    console.log(error);\r\n})\r\n\r\n```\r\n\r\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: '27624ecc1d003b802abbdd8732e13877406759fa',
21 silly publish   _id: 'node-aweber@1.0.4',
21 silly publish   _shasum: '53dd90c4bd2aaf19e4ee4647bc8a680ff1c5781d',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name node-aweber
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'node-aweber',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   name: 'node-aweber',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/node-aweber
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading C:\Users\Devesh\AppData\Roaming\npm-cache\node-aweber\1.0.4\package.tgz
30 verbose request uri https://registry.npmjs.org/node-aweber
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 7:08:38 PM
33 verbose request using bearer token for auth
34 verbose request id ebb2543f06534716
35 http request PUT https://registry.npmjs.org/node-aweber
36 http 403 https://registry.npmjs.org/node-aweber
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '95',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Thu, 27 Apr 2017 13:38:52 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-sin18029-SIN',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1493300331.984129,VS0,VE1175',
37 verbose headers   vary: 'Accept-Encoding' }
38 verbose request invalidating C:\Users\Devesh\AppData\Roaming\npm-cache\registry.npmjs.org\node-aweber on PUT
39 error publish Failed PUT 403
40 verbose stack Error: "You cannot publish over the previously published version 1.0.4." : node-aweber
40 verbose stack     at makeError (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:264:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:252:14)
40 verbose stack     at Request._callback (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:172:14)
40 verbose stack     at Request.self.callback (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:200:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:1067:10)
40 verbose stack     at emitOne (events.js:101:20)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:988:12)
41 verbose statusCode 403
42 verbose pkgid node-aweber
43 verbose cwd E:\aweber
44 error Windows_NT 10.0.14393
45 error argv "C:\\Program Files\\nodejs\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish"
46 error node v6.2.2
47 error npm  v3.9.5
48 error code E403
49 error "You cannot publish over the previously published version 1.0.4." : node-aweber
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
